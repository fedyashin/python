# 3. Есть два списка:
# tutors = [
#     'Иван', 'Анастасия', 'Петр', 'Сергей',
#     'Дмитрий', 'Борис', 'Елена'
# ]
# klass = [
#     '9А', '7В', '9Б', '9В', '8Б', '10А', '10Б', '9А'
# ]
# Необходимо реализовать генератор, возвращающий кортежи вида (<tutor>, <klass>), например:
#
# ('Иван', '9А')
# ('Анастасия', '7В')
# ...
#
# Количество генерируемых кортежей не должно быть больше длины списка tutors. Если в списке klass меньше элементов,
# чем в списке tutors, необходимо вывести последние кортежи в виде: (<tutor>, None), например:
#
# ('Станислав', None)
#
# Доказать, что вы создали именно генератор. Проверить его работу вплоть до истощения.
# Подумать, в каких ситуациях генератор даст эффект.

def my_fun(tut, kl):
    for el in range(len(tut)):
        if el < len(kl):
            my_tuple = tut[el], kl[el]
        else:
            my_tuple = tut[el], None
        yield my_tuple


tutors = ['Иван', 'Анастасия', 'Петр', 'Сергей', 'Дмитрий', 'Борис', 'Елена', 'Станислав']
klass = ['9А', '7В', '9Б', '9В', '8Б', '10А', '10Б', '9А']
inx = 0
while inx < len(tutors):
    print(my_fun(tutors, klass))
    inx += 1

# ПОЧЕМУ-ТО НЕ РАБОТАЕТ ¯\_(ツ)_/¯
